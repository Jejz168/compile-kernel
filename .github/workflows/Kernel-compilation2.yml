#==========================================================================
# Description: Compile the Armbian kernel
# Copyright (C) 2021 https://github.com/ophub/amlogic-s9xxx-armbian
#==========================================================================

name: Kernel_compilation[5.15/6]

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      checkupdates:
        description: 'Checkupdates connection to Actions'
        required: false
        default: 'false'
      kernel_sign:
        description: "Set the kernel custom signature"
        required: false
        default: ""
      kernel_config:
        description: "Set the path of kernel .config"
        required: false
        default: ""
  schedule:
    - cron: 30 19 * * *
    
env:
  KERNEL_REPO: unifreq
  KERNEL_VERSION: 5.15.100_6.1.16
  KERNEL_AUTO: true
  TZ: Asia/Shanghai

jobs:
  Checka:
    runs-on: ubuntu-latest
    env:
      REPO_URL_Kernel515: https://github.com/unifreq/linux-5.15.y
      REPO_BRANCH_Kernel515: main
      REPO_PATH_Kernel515 : "Kernel_515"

      REPO_URL_Kernel6: https://github.com/unifreq/linux-6.1.y
      REPO_BRANCH_Kernel6: main
      REPO_PATH_Kernel6 : "Kernel_6"
      
    outputs:
      output: ${{ steps.outputunifreq.outputs.unifreq }}
      
    steps:

    - name: Get Commit Hash
      id: getHash
      run: |
      
        git clone --depth 1 $REPO_URL_Kernel515 -b $REPO_BRANCH_Kernel515 $REPO_PATH_Kernel515
        cd $REPO_PATH_Kernel515
        echo "commitHash_Kernel515=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT
        cd
        
        git clone --depth 1 $REPO_URL_Kernel6 -b $REPO_BRANCH_Kernel6 $REPO_PATH_Kernel6
        cd $REPO_PATH_Kernel6
        echo "commitHash_Kernel6=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT
        cd
        
    - name: Show Commit Head and Combination Heads
      id: combHeader
      run: |
        echo "commitHash_Kernel515: ${{ steps.getHash.outputs.commitHash_Kernel515 }}"
        echo "commitHash_Kernel6: ${{ steps.getHash.outputs.commitHash_Kernel6 }}"
        echo "commitHash_All=\
          ${{steps.getHash.outputs.commitHash_Kernel515}}\
          ${{steps.getHash.outputs.commitHash_Kernel6}}" >> $GITHUB_OUTPUT
          
    - name: Compare Commit Hash
      id: cacheHash
      uses: actions/cache@main
      with:
        path: .commitHash_All
        key: HEAD-${{ steps.combHeader.outputs.commitHash_All }}
   
    - name: Set output for next job
      id: outputunifreq
      if: steps.cacheHash.outputs.cache-hit == 'true'
      run: |
        echo "unifreq=hello" >> $GITHUB_OUTPUT
        
    - name: Save New Commit Hash
      if: steps.cacheHash.outputs.cache-hit != 'true'
      run: |
        echo ${{ steps.getHash.outputs.commitHash_Kernel515 }} | tee .commitHash_Kernel515
        echo ${{ steps.getHash.outputs.commitHash_Kernel6 }} | tee .commitHash_Kernel6
        echo ${{ steps.combHeader.outputs.commitHash_All }} | tee .commitHash_All 
# /////////////////////////////////////////////////////////////////////////////////////////////////////////        
  Build_Kernel:
    needs: [Checka]   
    if: ${{ needs.Checka.outputs.output != 'hello' || github.event.inputs.checkupdates == 'true'}}
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout
        uses: actions/checkout@main

      - name: Initialization environment
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
          sudo -E apt-get -qq update
          sudo -E apt-get -qq install -y $(curl -fsSL https://raw.githubusercontent.com/ophub/amlogic-s9xxx-armbian/main/compile-kernel/tools/script/ubuntu2204-build-armbian-depends)
          sudo -E apt-get -qq autoremove --purge
          sudo -E apt-get -qq clean
          sudo timedatectl set-timezone "$TZ"
          echo "COMPILE_STARTINGTIME=$(date +"%m.%d.%H%M")" >> $GITHUB_ENV
          
      - name: Compile the kernel for Amlogic s9xxx
        uses: Jejz168/compile-kernel@main
        with:
          build_target: kernel
          kernel_repo: ${{ env.KERNEL_REPO }}
          kernel_version: ${{ env.KERNEL_VERSION }}
          kernel_auto: ${{ env.KERNEL_AUTO }}
          kernel_sign: ${{ github.event.inputs.kernel_sign }}
          kernel_config: ${{ github.event.inputs.kernel_config }}

      - name: Upload Kernel to Release
        uses: ncipollo/release-action@main
        if: env.PACKAGED_STATUS == 'success' && !cancelled()
        with:
          name: kernel_[${{ env.PACKAGED_OUTPUTTAGS }}]ÂÜÖÊ†∏
          tag: kernel_Stable
          artifacts: ${{ env.PACKAGED_OUTPUTPATH }}/*
          allowUpdates: true
          removeArtifacts: true
          token: ${{ secrets.GH_TOKEN }}
          body: |
            The kernel can be used to compile Armbian and OpenWrt.
                  
      - name: Telegram notification
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
            üí•kernel_${{ env.PACKAGED_OUTPUTTAGS }}ÁºñËØëÂÆåÊàê
 # //////////////////////////////////////////////////////////////////////////////////////////////
  Cleaning:
    if: ${{ always() }}
    needs: [Checka,Build_Kernel]    
    runs-on: ubuntu-latest
    steps:  
    - name: Delete workflow runs
      uses: Jejz168/delete-workflow-runs@main
      with:
        retain_days: 2
        keep_minimum_runs: 6
        
    - name: Remove old Releases
      uses: Jejz168/delete-older-releases@master
      with:
        keep_latest: 10
        delete_tags: true
        delete_tag_pattern: _
      env:
        GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
