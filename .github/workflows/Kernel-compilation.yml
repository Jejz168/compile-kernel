#==========================================================================
# Description: Compile the Armbian kernel
# Copyright (C) 2021 https://github.com/ophub/amlogic-s9xxx-armbian
#==========================================================================

name: Kernel compilation

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      checkupdates:
        description: 'Checkupdates connection to Actions'
        required: false
        default: 'false'
      kernel_repo:
        description: "Choose to compile kernel sources"
        required: false
        default: "unifreq"
        type: choice
        options:
          - unifreq
          - kernel.org
      kernel_version:
        description: "Select kernel version"
        required: false
        default: "5.4.190_5.10.100"
        type: choice
        options:
          - 5.4.190_5.10.100
          - 5.15.45_5.10.100
          - 5.15.45_5.18.1
          - 5.18.1
          - 5.15.45
          - 5.10.100
          - 5.4.190
      kernel_auto:
        description: "Auto use the latest kernel"
        required: false
        default: true
        type: boolean
      kernel_sign:
        description: "Set the kernel custom signature"
        required: false
        default: ""
      kernel_config:
        description: "Set the path of kernel .config"
        required: false
        default: ""

env:
  TZ: Asia/Shanghai

jobs:
  check:
    runs-on: ubuntu-latest
    env:
      REPO_URL_Kernel510: https://github.com/unifreq/linux-5.10.y
      REPO_BRANCH_Kernel510: master
      REPO_PATH_Kernel510 : "Kernel_510"

      REPO_URL_Kernel54: https://github.com/unifreq/linux-5.4.y
      REPO_BRANCH_Kernel54: master
      REPO_PATH_Kernel54 : "Kernel_54"
      
    outputs:
      output: ${{ steps.outputunifreq.outputs.unifreq }}
      
    steps:

    - name: Get Commit Hash
      id: getHash
      run: |
      
        git clone --depth 1 $REPO_URL_Lede -b $REPO_BRANCH_Lede $REPO_PATH_Kernel510
        cd $REPO_PATH_Kernel510
        echo "::set-output name=commitHash_Kernel510::$(git rev-parse HEAD)"
        cd
        git clone --depth 1 $REPO_URL_HelloWorld -b $REPO_BRANCH_HelloWorld $REPO_PATH_Kernel54
        cd $REPO_PATH_Kernel54
        echo "::set-output name=commitHash_Kernel54::$(git rev-parse HEAD)"
        cd
        
    - name: Show Commit Head and Combination Heads
      id: combHeader
      run: |
        echo "commitHash_Kernel510: ${{ steps.getHash.outputs.commitHash_Kernel510 }}"
        echo "commitHash_Kernel54: ${{ steps.getHash.outputs.commitHash_Kernel54 }}"
        echo "::set-output name=commitHash_All::\
          ${{steps.getHash.outputs.commitHash_Kernel510}}\
          ${{steps.getHash.outputs.commitHash_Kernel54}}"
          
    - name: Compare Commit Hash
      id: cacheHash
      uses: actions/cache@v2
      with:
        path: .commitHash_All
        key: HEAD-${{ steps.combHeader.outputs.commitHash_All }}
   
    - name: Set output for next job
      id: outputunifreq
      if: steps.cacheHash.outputs.cache-hit == 'true'
      run: |
        echo "::set-output name=unifreq::hello"
        
    - name: Save New Commit Hash
      if: steps.cacheHash.outputs.cache-hit != 'true'
      run: |
        echo ${{ steps.getHash.outputs.commitHash_Kernel510 }} | tee .commitHash_Kernel510
        echo ${{ steps.getHash.outputs.commitHash_Kernel54 }} | tee .commitHash_Kernel54
        echo ${{ steps.combHeader.outputs.commitHash_All }} | tee .commitHash_All 
# /////////////////////////////////////////////////////////////////////////////////////////////////////////        
  Build_Kernel:
    needs: [Checka]   
    if: ${{ needs.Checka.outputs.output != 'hello' || github.event.inputs.checkupdates == 'true'}}
    runs-on: ubuntu-22.04
    if: github.event.repository.owner.id == github.event.sender.id

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Initialization environment
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
          sudo -E apt-get -qq update
          sudo -E apt-get -qq install -y $(curl -fsSL https://raw.githubusercontent.com/ophub/amlogic-s9xxx-armbian/main/compile-kernel/tools/script/ubuntu2204-build-armbian-depends)
          sudo -E apt-get -qq autoremove --purge
          sudo -E apt-get -qq clean
          sudo timedatectl set-timezone "$TZ"
          echo "COMPILE_STARTINGTIME=$(date +"%m.%d.%H%M")" >> $GITHUB_ENV
          
      - name: Compile the kernel for Amlogic s9xxx
        uses: Jejz168/compile-kernel@main
        with:
          build_target: kernel
          kernel_repo: ${{ github.event.inputs.kernel_repo }}
          kernel_version: ${{ github.event.inputs.kernel_version }}
          kernel_auto: ${{ github.event.inputs.kernel_auto }}
          kernel_sign: ${{ github.event.inputs.kernel_sign }}
          kernel_config: ${{ github.event.inputs.kernel_config }}

      - name: Upload Kernel to Release
        uses: ncipollo/release-action@main
        if: env.PACKAGED_STATUS == 'success' && !cancelled()
        with:
          tag: kernel_${{ env.PACKAGED_OUTPUTTAGS }}
          artifacts: ${{ env.PACKAGED_OUTPUTPATH }}/*
          allowUpdates: true
          token: ${{ secrets.GH_TOKEN }}
          body: |
            The kernel can be used to compile Armbian and OpenWrt.
                  
      - name: Telegram notification
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
            üí•kernel_${{ env.PACKAGED_OUTPUTTAGS }}ÁºñËØëÂÆåÊàê
 # //////////////////////////////////////////////////////////////////////////////////////////////
  Cleaning:
    if: ${{ always() }}
    needs: [Checka,Build_Kernel]    
    runs-on: ubuntu-latest
    steps:  
    - name: Delete workflow runs
      uses: GitRML/delete-workflow-runs@main
      with:
        retain_days: 2
        keep_minimum_runs: 6
        
    - name: Remove old Releases
      uses: dev-drprasad/delete-older-releases@v0.2.0
      with:
        keep_latest: 10
        delete_tags: true
        delete_tag_pattern: _
      env:
        GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}            
